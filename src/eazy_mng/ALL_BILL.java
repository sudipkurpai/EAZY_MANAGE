/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eazy_mng;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sudip Maiti
 */
public class ALL_BILL extends javax.swing.JFrame {

    String ID = null;
    String Name = null;
    String Phone = null;
    String Email = null;
    String calender = null;
    String Gender= null;
    String Address =null;
    String date=null;
    String time = null;
    String inv=null;
   // String d1=null;
   // String d2 = null;
    /**
     * Creates new form REMOVE_EMPLOYEE
     */
    public ALL_BILL() {
        initComponents();
        allday();
    }
    
    void abb (String fullname, String mng_Id,String email,String t1,String d1,String p) {
       Name = fullname;
        ID = mng_Id;
        Email = email;
        time = t1;
        date = d1;
        Phone= p;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Invoice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        na = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        c1 = new com.toedter.calendar.JDateChooser();
        c2 = new com.toedter.calendar.JDateChooser();
        bill_s = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 204, 102));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ALL BILL");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close (1).png"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(297, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 50));

        jPanel3.setBackground(new java.awt.Color(210, 169, 251));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Invoice.setBackground(new java.awt.Color(255, 255, 255));
        Invoice.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        Invoice.setForeground(new java.awt.Color(0, 0, 255));
        Invoice.setText("Enter Invoice No.");
        Invoice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Invoice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                InvoiceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                InvoiceFocusLost(evt);
            }
        });
        Invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                InvoiceKeyReleased(evt);
            }
        });
        jPanel3.add(Invoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 200, 30));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        jLabel6.setText("All Details");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 100, 20));

        jButton2.setBackground(new java.awt.Color(0, 224, 201));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/replay.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 40, 30));

        jButton4.setBackground(new java.awt.Color(0, 224, 201));
        jButton4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 204));
        jButton4.setText("Reset");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 90, 30));

        table.setBackground(new java.awt.Color(255, 255, 255));
        table.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        table.setForeground(new java.awt.Color(0, 0, 255));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice No.", "Customer Name", "Date", "Time", "Total ", "Bill Status", "Payment Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 730, 260));

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 204));
        jLabel12.setText("Name :");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 50, -1));

        jButton7.setBackground(new java.awt.Color(0, 224, 201));
        jButton7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 204));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search-magnifier-interface-symbol (1).png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 40, 30));

        na.setBackground(new java.awt.Color(255, 255, 255));
        na.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        na.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.add(na, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 160, 30));

        jButton3.setBackground(new java.awt.Color(0, 0, 255));
        jButton3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 255, 0));
        jButton3.setText("Print Bill");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 80, 110, 30));

        jButton5.setBackground(new java.awt.Color(0, 255, 51));
        jButton5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 255));
        jButton5.setText("New Bill");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 90, 30));

        c1.setBackground(new java.awt.Color(255, 255, 255));
        c1.setForeground(new java.awt.Color(0, 0, 255));
        jPanel3.add(c1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 140, 30));

        c2.setBackground(new java.awt.Color(255, 255, 255));
        c2.setForeground(new java.awt.Color(0, 0, 255));
        jPanel3.add(c2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 140, 30));

        bill_s.setBackground(new java.awt.Color(255, 255, 255));
        bill_s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bill_s.setForeground(new java.awt.Color(0, 0, 0));
        bill_s.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All Bill", "Success Bill", "Reject Bill" }));
        jPanel3.add(bill_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 140, 30));

        jButton6.setBackground(new java.awt.Color(0, 0, 255));
        jButton6.setFont(new java.awt.Font("Dialog.plain", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Ok");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 770, 430));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(770, 480));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        DASHBOARD_M dm = new DASHBOARD_M();
       dm.mngname(Name,ID,Email,Phone,date,time);
       dm.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jLabel8MouseClicked

    public void allday(){
        try {
        
             //Data fetch from database
            String sql = "Select * From add_bill ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
            
          //  ps.setString(2,date);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
             
             //  na.setText(nnn);
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                   
                   model.addRow(o);
               }while (rs.next());
           }else{
               // JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "Something Went Wrong!!", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
    }
    
    public void allss(){
         if(c1.getDate()== null || c2.getDate()== null){
            // JOptionPane.showMessageDialog(this, "Insert Both Date First For Search");
       //  if (bill_s.getSelectedItem().equals("All Bill")){
            
         try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id = ?  ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
            ps.setString(1,inv);
          //  ps.setString(2,date);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
              
             //  na.setText(nnn);
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                   
                   model.addRow(o);
               }while (rs.next());
           }else{
                JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "Something Went Wrong!!", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        
            }
         }else{
          
            SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
          //  System.out.println("!@##%$$%$"+d1);
            String d2 = s.format(c2.getDate());
       
      //  if (bill_s.getSelectedItem().equals("All Bill")){
            
         try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id = ? and Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
            ps.setString(1,inv);
          //  ps.setString(2,date);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               String nnn =rs.getString("C_name");
             //  na.setText(nnn);
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                   
                   model.addRow(o);
               }while (rs.next());
           }else{
                JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "Something Went Wrong!!", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
         }
    }
   
    
    public void succes(){
         
        if(c1.getDate()== null || c2.getDate()== null ){
            // JOptionPane.showMessageDialog(this, "Insert Both Date First For Search");
       //  if (bill_s.getSelectedItem().equals("Success Bill")){
            
         try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id = ? and Bill_status= 'Success Bill'  ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
            ps.setString(1,inv);
          //  ps.setString(2,date);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               String nnn =rs.getString("C_name");
             //  na.setText(nnn);
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                   
                   model.addRow(o);
               }while (rs.next());
           }else{
                JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "Something Went Wrong!!", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
         
         }else{
               
         try {
           SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
          //  System.out.println("!@##%$$%$"+d1);
            String d2 = s.format(c2.getDate());
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id = ? and Bill_status= 'Success Bill' and Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
            ps.setString(1,inv);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
                JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "Something Went Wrong!!", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        
        }
         }
    }
    
    public void cac(){
        if(c1.getDate()== null || c2.getDate()== null ){
            // JOptionPane.showMessageDialog(this, "Insert Both Date First For Search");
        // if (bill_s.getSelectedItem().equals("Cancle Bill")){
            
         try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id = ? and Bill_status = 'Cancle Bill' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
            ps.setString(1,inv);
          //  ps.setString(2,date);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               String nnn =rs.getString("C_name");
             //  na.setText(nnn);
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                   
                   model.addRow(o);
               }while (rs.next());
           }else{
                JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "Something Went Wrong!!", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
         } 
         else
         { 
         try {
         SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
          //  System.out.println("!@##%$$%$"+d1);
            String d2 = s.format(c2.getDate());
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id = ? and Bill_status = 'Cancle Bill' and Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
            ps.setString(1,inv);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
               JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "Something Went Wrong!!", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
       
            }
         }
    }
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
         inv = Invoice.getText();
        if (bill_s.getSelectedItem().equals("All Bill")){
            allss();
        }else if (bill_s.getSelectedItem().equals("Success Bill")){
        succes();
       }if (bill_s.getSelectedItem().equals("Reject Bill")){
           cac();
       }
  
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (bill_s.getSelectedItem().equals("All Bill")){
        all();
        }else   if (bill_s.getSelectedItem().equals("Success Bill")){ 
                Succes();
        }else  if (bill_s.getSelectedItem().equals("Reject Bill")){
        Cencle();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

  
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         bill_s.setSelectedIndex(0);
        
        Invoice.setText("Enter Invoice No.");
        na.setText("");
         DefaultTableModel tm=(DefaultTableModel) table.getModel();
        while(tm.getRowCount()>0){
            tm.setRowCount(0);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
       //  TODO add your handling code here:
         int i = table.getSelectedRow();
     DefaultTableModel model=(DefaultTableModel)table.getModel();
     Invoice.setText(model.getValueAt(i,0).toString());
     na.setText(model.getValueAt(i,1).toString());
    }//GEN-LAST:event_tableMouseClicked

    
    public void all_as(){
         if(c1.getDate()== null || c2.getDate()== null){ 
         try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id like '%"+inv+"%' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
           // ps.setString(1,inv);
          //  ps.setString(2,date);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               String nnn =rs.getString("C_name");
             //  na.setText(nnn);
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                   
                   model.addRow(o);
               }while (rs.next());
           
           }else{
              //  JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "Something Went Wrong!!", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
          
         }else{
          
            SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
          //  System.out.println("!@##%$$%$"+d1);
            String d2 = s.format(c2.getDate());
            
      //  if (bill_s.getSelectedItem().equals("All Bill")){
            
         try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id Like '%"+inv+"%'  and Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
           // ps.setString(1,inv);
          //  ps.setString(2,date);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               String nnn =rs.getString("C_name");
           //    na.setText(nnn);
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                   
                   model.addRow(o);
               }while (rs.next());
           }else{
            //    JOptionPane.showMessageDialog(null,"Enter Correct Invoice No", "Bill not Found", JOptionPane.ERROR_MESSAGE);
           }
         
            }catch(Exception e){
            System.out.println("error"+e);
            }
         }}
   public void pend_as(){
            if (c1.getDate()== null || c2.getDate()== null){
                  try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id Like '%"+inv+"%' and Bill_status = 'Pending Bill'  ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
          //  ps.setString(1,inv);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                  //  JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
             //  JOptionPane.showMessageDialog(null,"Enter Correct Invoice No", "Bill not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
             }else{
                try {
             SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
          //  System.out.println("!@##%$$%$"+d1);
            String d2 = s.format(c2.getDate());
                
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id Like '%"+inv+"%' and Bill_status = 'Pending Bill' and  Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
          //  ps.setString(1,inv);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                  //  JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
             //  JOptionPane.showMessageDialog(null,"Enter Correct Invoice No", "Bill not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
        }
        }
        
  public void suc_as(){
      
            if(c1.getDate()== null || c2.getDate()== null){
                  try {
                      
                  
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id Like '%"+inv+"%' and Bill_status = 'Success Bill'";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
          //  ps.setString(1,inv);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                  //  JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
             //  JOptionPane.showMessageDialog(null,"Enter Correct Invoice No", "Bill not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
             }else{
                try {
        
            SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
          //  System.out.println("!@##%$$%$"+d1);
            String d2 = s.format(c2.getDate());
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id Like '%"+inv+"%' and Bill_status= 'Success Bill' and Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
           // ps.setString(1,inv);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
               // JOptionPane.showMessageDialog(null,"Enter Correct Invoice No", "Bill not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
            }
        }
  
  public void can_as(){
        if(c1.getDate()== null || c2.getDate()== null){
          try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id Like '%"+inv+"%' and Bill_status = 'Cancle Bill'";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
          //  ps.setString(1,inv);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                  //  JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
             //  JOptionPane.showMessageDialog(null,"Enter Correct Invoice No", "Bill not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
            }else{
         try {
        
             SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
          //  System.out.println("!@##%$$%$"+d1);
            String d2 = s.format(c2.getDate()); 
            String sql = "Select * From add_bill where Invoice_id Like '%"+inv+"%' and Bill_status = 'Cancle Bill' and Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
           // ps.setString(1,inv);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
              // JOptionPane.showMessageDialog(null,"Enter Correct Invoice No", "Bill not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
        }
         
        
  }
    private void InvoiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InvoiceKeyReleased
        // TODO add your handling code here:
      String id = Invoice.getText();
         
       //      JOptionPane.showMessageDialog(this, "Insert Both Date First For Search");
          if (bill_s.getSelectedItem().equals("All Bill")){
              
         // all_as();
          if(c1.getDate()== null || c2.getDate()== null){ 
         try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id like '%"+id+"%' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
           // ps.setString(1,inv);
          //  ps.setString(2,date);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
             //  String nnn =rs.getString("C_name");
             //  na.setText(nnn);
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                   
                   model.addRow(o);
               }while (rs.next());
           
           }else{
              //  JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "Something Went Wrong!!", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
          }  
         else{
          
            SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
          //  System.out.println("!@##%$$%$"+d1);
            String d2 = s.format(c2.getDate());
            
      //  if (bill_s.getSelectedItem().equals("All Bill")){
            
         try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id Like '%"+id+"%'  and Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
           // ps.setString(1,inv);
          //  ps.setString(2,date);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               String nnn =rs.getString("C_name");
           //    na.setText(nnn);
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                   
                   model.addRow(o);
               }while (rs.next());
           }else{
            //    JOptionPane.showMessageDialog(null,"Enter Correct Invoice No", "Bill not Found", JOptionPane.ERROR_MESSAGE);
           }
         
            }catch(Exception e){
            System.out.println("error"+e);
            }
         }
        
          }else if (bill_s.getSelectedItem().equals("Success Bill")){
         //  suc_as();  
         
         if(c1.getDate()== null || c2.getDate()== null){
                  try {
                      
                  
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id Like '%"+id+"%' and Bill_status = 'Success Bill'";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
          //  ps.setString(1,inv);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                  //  JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
             //  JOptionPane.showMessageDialog(null,"Enter Correct Invoice No", "Bill not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
             }else{
                try {
        
            SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
          //  System.out.println("!@##%$$%$"+d1);
            String d2 = s.format(c2.getDate());
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id Like '%"+id+"%' and Bill_status= 'Success Bill' and Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
           // ps.setString(1,inv);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
               // JOptionPane.showMessageDialog(null,"Enter Correct Invoice No", "Bill not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
            }
        
        } else if (bill_s.getSelectedItem().equals("Reject Bill")){
           // can_as();
            if(c1.getDate()== null || c2.getDate()== null){
          try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where Invoice_id Like '%"+id+"%' and Bill_status = 'Reject Bill'";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
          //  ps.setString(1,inv);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                  //  JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
             //  JOptionPane.showMessageDialog(null,"Enter Correct Invoice No", "Bill not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
            }else{
         try {
        
             SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
          //  System.out.println("!@##%$$%$"+d1);
            String d2 = s.format(c2.getDate()); 
            String sql = "Select * From add_bill where Invoice_id Like '%"+id+"%' and Bill_status = 'Reject Bill' and Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
           // ps.setString(1,inv);
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
              // JOptionPane.showMessageDialog(null,"Enter Correct Invoice No", "Bill not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
        }
         
        }
    }//GEN-LAST:event_InvoiceKeyReleased

    private void InvoiceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InvoiceFocusGained
        // TODO add your handling code here:
          if(Invoice.getText().equals("Enter Invoice No.")){
            
            Invoice.setText("");
    }
    }//GEN-LAST:event_InvoiceFocusGained

    private void InvoiceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InvoiceFocusLost
        // TODO add your handling code here
         if(Invoice.getText().equals("")){
           
            Invoice.setText("Enter Invoice No.");
           
        }else{
           Invoice.setVisible(true);
    } 
    }//GEN-LAST:event_InvoiceFocusLost

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        c1.setDate(null);
         c2.setDate(null);
         allday();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String iiii= Invoice.getText();
        BILL_PRINT_MA bpm = new BILL_PRINT_MA ();
        bpm.bp(Name,ID,Email,time,date,Phone, iiii);
        bpm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    
    public void all(){
       
           if(c1.getDate()== null || c2.getDate()== null){
                 try {
        
           
           String sql = "Select * From add_bill  ";
           Connection con=DATABASE_CONNECTION.getConnection();
           PreparedStatement ps=con.prepareStatement(sql);
           ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                    model.addRow(o);
               }while (rs.next());
           }else{
                JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "BillS Not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
        }else{
          
            SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
           String d2 = s.format(c2.getDate());
             
        try {
        
           
            String sql = "Select * From add_bill where Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
           ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                    model.addRow(o);
               }while (rs.next());
           }else{
                JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "BillS Not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
        
             } 
    }
     
    
      public void Succes(){
         
           if(c1.getDate()== null || c2.getDate()== null){
               
                try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where  Bill_status= 'Success Bill'  ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
            
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
                JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "BillS Not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
          
            // JOptionPane.showMessageDialog(this, "Insert Both Date First For Search");
         }else{
          
            SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
          //  System.out.println("!@##%$$%$"+d1);
            String d2 = s.format(c2.getDate());
        try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where  Bill_status= 'Success Bill' and Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
            
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
                JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "BillS Not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
          }
          
    }
      public void Cencle(){
           
        
          if(c1.getDate()== null || c2.getDate()== null){
          
                try {
       
             //Data fetch from database
            String sql = "Select * From add_bill where  Bill_status = 'Reject Bill'  ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
            
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
                JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "Bills Not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
              //JOptionPane.showMessageDialog(this, "Insert Both Date First For Search");
         }else{
          
            SimpleDateFormat s=new SimpleDateFormat("dd-MM-yyyy");
            String d1 = s.format(c1.getDate());
          //  System.out.println("!@##%$$%$"+d1);
            String d2 = s.format(c2.getDate());
        try {
        
             //Data fetch from database
            String sql = "Select * From add_bill where  Bill_status = 'Reject Bill' and Date between '"+d1+"' and '"+d2+"' ";
            Connection con=DATABASE_CONNECTION.getConnection();
            PreparedStatement ps=con.prepareStatement(sql);
            
            ResultSet rs=ps.executeQuery();
           DefaultTableModel model =(DefaultTableModel)table.getModel(); 
           model.setRowCount(0);
           if(rs.next()){
               do
               {
                   Object o []={
                       rs.getString("Invoice_id"),rs.getString("C_name"),rs.getString("Date"),rs.getString("Time"),rs.getString("All_total"),rs.getString("Bill_status"),rs.getString("Payment_status")};
                   // JOptionPane.showMessageDialog(this, "Product Found");
                    model.addRow(o);
               }while (rs.next());
           }else{
                JOptionPane.showMessageDialog(null,"No Bills Available Between This Date", "Bills Not Found", JOptionPane.ERROR_MESSAGE);
           }
          
            }catch(Exception e){
            System.out.println("error"+e);
        }
          }
           
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ALL_BILL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ALL_BILL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ALL_BILL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ALL_BILL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ALL_BILL().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Invoice;
    private javax.swing.JComboBox<String> bill_s;
    private com.toedter.calendar.JDateChooser c1;
    private com.toedter.calendar.JDateChooser c2;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField na;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
